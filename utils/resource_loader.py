"""
リソースローダーモジュール

ゲームで使用する画像や音声などのリソースを読み込む機能を提供します。
"""

import pyxel
import os

def load_resources():
    """
    ゲームで使用するリソースを読み込みます。
    
    この関数はゲーム開始時に一度だけ呼び出されます。
    """
    # リソースファイルの存在チェック
    resources_path = "resources/game_resources.pyxres"
    
    if os.path.exists(resources_path):
        # リソースファイルが存在する場合はロード
        pyxel.load(resources_path)
    else:
        # リソースファイルがない場合は初期化してデフォルトのリソースを作成
        create_default_resources()

def create_default_resources():
    """
    デフォルトのゲームリソースを作成します。
    
    リソースファイルが存在しない場合に呼び出され、基本的なグラフィックスを初期化します。
    """
    # イメージバンク0：プレイヤーとオプション
    pyxel.images[0].set(0, 0, [
        "00011000",
        "00111100",
        "01111110",
        "11111111",
        "11111111",
        "01111110",
        "00111100",
        "00011000"
    ])
    
    # オプション（サブウェポン）
    pyxel.images[0].set(8, 0, [
        "00110000",
        "01111000",
        "01111000",
        "00110000",
        "00000000",
        "00000000"
    ])
    
    # イメージバンク1：ボスとエネミー
    # ドラゴンボス（簡易的な形状）
    pyxel.images[1].set(0, 0, [
        "00000000000000000000000000000000",
        "00001111111111111111111111000000",
        "00011111111111111111111111100000",
        "00111111111111111111111111110000",
        "01111111111111111111111111111000",
        "11111111111111111111111111111100",
        "11110000001111111111000000111100",
        "11100000000111111110000000011100",
        "11100000000011111100000000011100",
        "11100001100001111000011000011100",
        "11100001100000110000011000011100",
        "11110000000000000000000000111100",
        "01111000000000000000000001111000",
        "00111100000000000000000011110000",
        "00011110000001111000000111100000",
        "00001111000011111100001111000000",
        "00000111100111111110011110000000",
        "00000011111111111111111100000000",
        "00000001111111111111111000000000",
        "00000000111111111111110000000000",
        "00000000011111111111100000000000",
        "00000000001111111111000000000000",
        "00000000000111111110000000000000",
        "00000000001111111111000000000000",
        "00000000011111111111100000000000",
        "00000000111111111111110000000000",
        "00000001111110001111110000000000",
        "00000011111100000111111000000000",
        "00000111111000000011111100000000",
        "00001111110000000001111110000000",
        "00011111100000000000111111000000",
        "00111111000000000000011111100000"
    ])
    
    # イメージバンク2：パワーアップアイテムと障害物
    # パワーアップP
    pyxel.images[2].set(0, 0, [
        "00111100",
        "01111110",
        "11111111",
        "11100111",
        "11100111",
        "11111110",
        "11111100",
        "11100000"
    ])
    
    # 残機アップL
    pyxel.images[2].set(8, 0, [
        "01100000",
        "01100000",
        "01100000",
        "01100000",
        "01100000",
        "01100000",
        "01111110",
        "01111110"
    ])
    
    # ボムアップB
    pyxel.images[2].set(16, 0, [
        "11111100",
        "11111110",
        "11000111",
        "11111110",
        "11111110",
        "11000111",
        "11111110",
        "11111100"
    ])
    
    # 音楽とSEの初期化（高度な音楽は省略）
    init_sounds()
    
    # 作成したリソースを保存
    save_resources()

def init_sounds():
    """
    ゲームで使用する音楽と効果音を初期化します。
    """
    # 効果音0: ショット音
    sound0 = pyxel.Sound()
    sound0.set("c3e3g3c4c4", "s", "4", "n", 7)
    pyxel.sounds[0] = sound0
    
    # 効果音1: 爆発音
    sound1 = pyxel.Sound()
    sound1.set("f2c2f1c1f1", "n", "5", "f", 8)
    pyxel.sounds[1] = sound1
    
    # 効果音2: パワーアップ取得音
    sound2 = pyxel.Sound()
    sound2.set("c3e3g3c4", "t", "5", "n", 5)
    pyxel.sounds[2] = sound2
    
    # 効果音3: ボム使用音
    sound3 = pyxel.Sound()
    sound3.set("f1c2f2c3f3", "t", "6", "f", 3)
    pyxel.sounds[3] = sound3
    
    # 効果音4: プレイヤー被弾音
    sound4 = pyxel.Sound()
    sound4.set("c2", "p", "6", "n", 1)
    pyxel.sounds[4] = sound4

def save_resources():
    """
    作成したリソースをファイルに保存します。
    """
    # resources ディレクトリがない場合は作成
    if not os.path.exists("resources"):
        os.makedirs("resources")
        
    # リソースを保存
    pyxel.save("resources/game_resources.pyxres")

def play_sound(sound_id):
    """
    指定したIDの効果音を再生します。
    
    @param {number} sound_id - 再生する効果音のID
    """
    pyxel.play(0, sound_id) 